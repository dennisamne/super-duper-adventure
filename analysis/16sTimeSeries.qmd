---
title: "16S time series"
author: "Dennis Amnebrink"
affiliation-title: "Linnaeus University"
title-block-banner: true
date: now
editor: visual
toc: true
prefer-html: true
number-sections: true
format:
  html:
     code-fold: true
     self-contained: true
---

# Project overview

This project focuses on phytoplankton counts and ASV dynamics of the *Aphanizomenon* and associated Nostocales in the 0.2 µm-fraction at the LMO-station from 2011-03-25 to 2019-12-17. Counts represented per each date is calculated as mean of replicates when available, relative abundances are also based on the mean of replicates.

```{r}
#| label: libraries
#| warning: false
library(data.table)
library(tidyverse)
library(vegan)
library(kableExtra)
library(DT)
library(plotly)
```

```{r}
#| label: colourscheme treatments
#| warning: false
GEOM_COL_COLOURS = c(
  RColorBrewer::brewer.pal(12, name = 'Paired'))

YEAR_COLOURS = c("2011" = "#A6CEE3","2012" = "#1F78B4", "2013" = "#B2DF8A","2014" = "#33A02C", "2015" = "#FB9A99", "2016" = "#E31A1C", "2017" = "#FDBF6F", "2018" = "#FF7F00", "2019" = "#CAB2D6")

GENUS_COLOURS1 = c("Aphanizomenon" = "#33A02C",
                   "Dolichospermum" = "#A6CEE3", 
                   "Nodularia" = "#1F78B4",
                   "Anabaena" = "#CAB2D6",
                   "Pseudo-anabaena" = "#FF7F00")

GENUS_COLOURS2 = c("Dolichospermum" = "#A6CEE3", 
                   "Nodularia" = "#1F78B4",
                   "Pseudanabaena" = "#FF7F00",
                   "Anabaena" = "#CAB2D6")
```

```{r}
#| label: file_loading
#| warning: false
#| cache: true

asv_tables <- fread("../data/ampliseq.ASV_tables.tsv.gz", sep ="\t") # ASV counts per sample, also contains projects other than LMO, i.e "KB", which is for now removed due to the inner_join with sample_ID which LMO is the only project selected.

asv_tax_species <- fread("../data/ampliseq.ASV_tax_species.tsv.gz", sep = "\t") %>% # GTDB SDBI (use this one) 
mutate(ASV_name = paste0("ASV_",row_number())) # This is to use a better name than ASV kwengkdnsgpkjasdngfpk 

barrnap <- fread("../data/ampliseq.barrnap.tsv.gz", sep = "\t")

dada2 <- fread("../data/ampliseq.DADA2_stats.tsv.gz") # Some of these samples not passable at all. Go through properly and see if needed in analysis... Especially A.andersson project has issues.

SILVA <- fread("../data/ampliseq.SILVA.ASV_tax.tsv.gz") # Different annotations with SILVA and the ASV_tax_species

#Sample_ID - select the correct projects. I.e some have been replaced, J.Pinhassi_14_02 -> J.Pinhassi_20_04.
# It looks like filtering out A.Andersson samples shouldn't greatly affect the time-series, still a delta of about two weeks.

sample_ID <- fread("../data/jp_samples.tsv", sep = "\t") %>%
  filter(seqtype == "16SDNA", filter_fraction == "0.2") %>%# Subsetting to relevant samples (308 LMO-samples for 16S at the 0.2µm fraction, so cool!)
  select(-project) # Remove this information as it is conflicting with the other dataframe, and now project is irrelevant
# Find / create a sample key for the 16s to actual dates. Check plate runs for decontam, and see if possible to apply from blanks. Should be specific for the samples where the blanks were used.

#Rerun the data to subset on LMO-only to remove unnecessary operations, and filter out chloroplasts etc
asv_tables <- asv_tables %>% 
  semi_join(sample_ID, by = "sample")

#Creating a unique ASV-name for each asv that is not "0145477917bfe723a3832c7c63a1853d" (deprecated, now using from tax file)
#asv_legend <- asv_tables %>%
#  distinct(ASV_ID) %>%
 # mutate(ASV_ID = as_factor(ASV_ID) %>% fct_reorder(row_number())) %>% 
 # mutate(ASV_name = paste0("ASV",row_number())) 

#Reading in a key for cruisnumber to date
LMODate <- read_tsv("../data/LMOCruiseToDate.tsv") %>%
   mutate(season = ifelse(grepl("201[0-9]-0[3-5]-", Date), "spring",
                           ifelse(grepl("201[0-9]-0[6-8]-", Date), "summer",
                                  ifelse(grepl("201[0-9]-09-|201[0-9]-10-|201[0-9]-11-", Date), "autumn", "winter"))))

# Reading in phytoplankton count figure and converting to understandable format and joining in dates
phytoCount <- read_tsv("../data/phyto_counts_USE_20210614.tsv") %>% 
  inner_join(LMODate, by = "LMO") %>%
  filter(!is.na(Biomass_mgC_m3)) %>%# Removing NA's from dataset as they interfere with operations
  mutate(Year = str_extract(Date, "[0-9][0-9][0-9][0-9]")) # Adding year as a separate column

lmo_metadata <- read_tsv("../data/LMO_metadata1.tsv.gz", col_types = cols(.default = col_number(), Chla_Average = col_number(), Date = col_datetime())) %>%
rename(dates = "Date")

```

## Metadata

The LMO timeseries abiotic and biotic variables exhibited seasonal patterns (@fig-Abioticdata).

```{r}
#| label: fig-Abioticdata
#| fig-cap: "Biotic and abiotic variables at the LMO station during years 2011-2019."
#| warning: false
# Alternative with temp + inorganic nutrients + chla + cell abundance. It is important that the labeller matches the order of the facet wrap, otherwise the names will appear in the wrong order.
variable_names <- list(
  'Temperature_C'="Temperature (\u00b0C)",
  'Nitrate_Average'= bquote('Nitrate' ~(µM)),
  'Phosphate_Average' = bquote('Phosphate' ~(µM)),
  'Chla_Average'= bquote('Chla Average' ~(µgL^-1)),
  'Salinity_PSU' = 'Salinity (PSU)'
)

variable_labeller <- function(variable,value){
  return(variable_names[value])
}

lmo_metadata %>%
  select(dates, Temperature_C, Salinity_PSU,Chla_Average, Nitrate_Average, Phosphate_Average) %>%
  pivot_longer(cols = c(2:6), names_to = "variable") %>%
  mutate(variable = factor(variable, levels = c("Temperature_C","Nitrate_Average","Phosphate_Average","Chla_Average","Salinity_PSU"))) %>%
  mutate(Year = str_extract(dates, "[0-9][0-9][0-9][0-9]")) %>%
  mutate(dates = as.Date(dates)) %>%
  mutate(year_day = case_when(Year == "2011" ~ julian(dates, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(dates, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(dates, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(dates, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(dates, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(dates, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(dates, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(dates, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(dates, origin = as.Date("2019-01-01"))
                              )) %>%
            ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y =value, colour = Year)) +
  geom_line() +
  facet_wrap(variable ~ ., labeller=variable_labeller, scales = "free_y") + 
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("") +
  ylab('') +
  theme_minimal() +
  scale_colour_manual('Year', values = YEAR_COLOURS) 


  
```

## Phytoplankton counts overview

Nostocales Biomass is plotted here as "Nostocophyceae (Cyanophyceae)" since named so in the phytocounts-file, it becomes evident the shift occured in 2015 when inspecting @fig-NostocClassAbundance the class most affected is Litostomatea, irregular abundances of Nostocophycaeae are also noted throughout the years, regardless of different counting methods. So far size fractions have been ignored while making this figure.

```{r}
#| label: fig-NostocClassAbundance
#| fig-cap: "Biomass values for the most abundant classes in the phytocount dataset at the LMO-station from year 2011-2020. Dashed line marks shift in counting method."
#| warning: false

top11 <- phytoCount %>%
  group_by(Class) %>%
  summarise(Biomass_mgC_m3 = mean(Biomass_mgC_m3)) %>%
  ungroup() %>%
  arrange(desc(Biomass_mgC_m3)) %>%
  slice(1:11) %>%
  pull(Class)


phytoCount %>%
  mutate(Class = ifelse(Class %in% top11, paste0(Class),paste0("Other"))) %>%
  group_by(Date, Class) %>%
  summarise(Biomass_mgC_m3 = sum(Biomass_mgC_m3)) %>%
  ungroup() %>%
  ggplot(mapping = aes(x = Date, y = Biomass_mgC_m3, group = Class, colour = Class)) +
  geom_line() +
  theme_minimal() +
  scale_color_manual('Class', values = GEOM_COL_COLOURS) +
  geom_vline(yintercept = 0, xintercept = as.Date("2015-01-01"), linetype = "dashed")
```

Making the relative abundance compositional we see that Nostocophyceae constitute up to 75% of the phytoplankton biomass in summer @fig-relativeBio.

```{r}
#| label: fig-relativeBio
#| fig-cap: "Biomass values for the most abundant classes in the phytocount dataset at the LMO-station from year 2011-2020. with relative abundance."
#| warning: false


phytoCount %>%
  mutate(Class = ifelse(Class %in% top11, paste0(Class),paste0("Other"))) %>%
  group_by(Date) %>%
  mutate(percentage = Biomass_mgC_m3/sum(Biomass_mgC_m3)) %>%
  ungroup() %>%
  group_by(Date, Class) %>%
  summarise(percentage = sum(percentage)) %>%
  ungroup() %>%
  inner_join(phytoCount %>% distinct(Year, Date), by = "Date") %>% #Reinserting year information
  mutate(year_day = case_when(Year == "2011" ~ julian(Date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(Date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(Date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(Date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(Date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(Date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(Date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(Date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(Date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>% #Adding Julian day information
  filter(Year != "2020") %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = percentage, fill = Class)) +
  geom_col(width = 4) +
  theme_minimal() +
  theme(legend.position = "bottom") +
  scale_fill_manual('Class', values = GEOM_COL_COLOURS) +
  facet_wrap(~ Year) +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("dates")

ggsave("../results/PhytoCountRel.png")

```

Listing the different shapes and sizeclasses within the nostocophyceae (see table below for all different combinations). For Aphanizomenon specifically it appears to have the same sizerange, minus the ND, to investigate this Aphanizomenon will be plotted in isolation.

```{r}
#| label: shapeSize_table
#| warning: false

DT::datatable(
  phytoCount %>% 
  filter(Class == "Nostocophyceae (Cyanophyceae)") %>% 
  distinct(Geometric_shape, SizeClassNo, Size_Range, Unit)
)


DT::datatable(
  phytoCount %>% 
  filter(Genus == "Aphanizomenon") %>% 
  distinct(Geometric_shape, SizeClassNo, Size_Range, Unit)
)
```

Inspecting this graph including all genuses within Nostophycaeae (@fig-NostocDyn), the Aphanizomenon count trends look similar regardless of the shift in 2015, with the exception that the yearly abundances seem to be higher for a longer period pre-2015. Regardless, it is evident that Aphanizomenon is the major contributor to biomass within the Nostocophyceae together with Nodularia and Anabaena, Planktolyngbya is also present in 2016, and Aphanothece in 2018. Note that there is a peak on the 15th of February 2017 which correspond to an expression peak seen in the gene expression data. Here is becomes clear that Aphanizomenon is actually more abundant throughout the year, as opposed to Nodularia which have a shorter bloom period.

```{r}
#| label: fig-NostocDyn
#| fig-cap: The biomass of the genuses within Nostocophyceae summarised per date for the years 2011-2020.
#| warning: false

plot <- phytoCount %>%
  filter(Class == "Nostocophyceae (Cyanophyceae)") %>%
  #filter(Genus %in% c("Aphanizomenon","Nodularia","Dolichospermum","Pseudo-anabaena","Anabaena")) %>%
  group_by(Date, Genus) %>%
  summarise(Biomass_mgC_m3 = sum(Biomass_mgC_m3)) %>%
  ungroup() %>%
  ggplot(mapping = aes(x = Date, y = Biomass_mgC_m3, group = Genus, colour = Genus)) +
  geom_line() +
  theme_minimal() +
  #scale_color_manual('Genus', values = GEOM_COL_COLOURS)  +
  geom_vline(yintercept = 0, xintercept = as.Date("2015-01-01"), linetype = "dashed") 

ggplotly(plot)
```

Ordering the most abundant genuses of the full dataset we see that Aphanizomenon and Nodularia are in the top ten, while Dolichospermum end up at position 29. (I have not cleaned out cilliates and small flagellates).

```{r}
#| label: phytoGenusOverview
#| warning: false

DT::datatable(
  phytoCount %>%
  group_by(Genus) %>%
  summarise(Biomass_mgC_m3 = mean(Biomass_mgC_m3)) %>%
  ungroup() %>%
  arrange(desc(Biomass_mgC_m3))
  )
```

Plotting the most abundant genuses in the dataset, still Aphanizomenon and Nodularia show up, while Peridiniella (Dinophyceae) is the most abundant @fig-phytoTidying. Indicating that Nostoc is among the largest contributors to phytoplankton biomass at the LMO if we focus on post period of 2015. Still a large contributor of 2011-2014 but percentage wise they contribute less due to cilliates.

```{r}
#| label: fig-phytoTidying
#| fig-label: Visualising the most abundant genuses in the entire dataset. Note that cilliates pop up, which is not a genus, but how the dataset looks...
#| warning: false

#Selecting the 11 most abundant genuses, and adding the 'Other' category - cilliates are a genus...
top11 <- phytoCount %>%
  group_by(Genus) %>%
  summarise(Biomass_mgC_m3 = mean(Biomass_mgC_m3)) %>%
  ungroup() %>%
  arrange(desc(Biomass_mgC_m3)) %>%
  slice(1:11) %>%
  pull(Genus)

phytoCount %>%
  mutate(Genus = ifelse(Genus %in% top11, paste0(Genus),paste0("Other"))) %>%
  group_by(Date, Genus) %>%
  summarise(Biomass_mgC_m3 = sum(Biomass_mgC_m3)) %>%
  ungroup() %>%
  ggplot(mapping = aes(x = Date, y = Biomass_mgC_m3, group = Genus, colour = Genus)) +
  geom_line() +
  theme_minimal() +
  scale_color_manual('Genus', values = GEOM_COL_COLOURS) +
  geom_vline(yintercept = 0, xintercept = as.Date("2015-01-01"), linetype = "dashed")
```

The Phytoplankton counts are mainly separated into two periods: Pre-2015 where the counting was done in-house, and 2015 and afterwards where the samples were sent to Poland for enumeration.

In the Nostocales there are `r phytoCount %>% filter(Class == "Nostocophyceae (Cyanophyceae)") %>% distinct(Genus) %>% nrow()` different genuses. These are listed in the table below. Among them the major players in the BS are found, including *Dolichospermum flosaquae* along with several other *Dolichospermum sp.*, *Anabaena sp.* and *Aphanizomenon flosaquae.* together with another *Aphanizomenon sp.*.

```{r}
#| label: tbl-nostocOverview
#| tbl-cap: "Listing of all Genus and species in the LMO-phytocount dataset."
#| warning: false

datatable(phytoCount %>% filter(Class == "Nostocophyceae (Cyanophyceae)") %>% distinct(Genus, Species))
```

Now that we have seen that the most important players of Nostoc in the phytocount data are Aphanizomenon and Nodularia we plot these together (@fig-NostocFacet) and highlight the elevated abundance period of Aphanizomenon as compared to Nodularia. One could consider to include here only Aphanizomenon, Nodularia, Anabaena and Planktolyngbya based on abundances.

```{r}
#| label: fig-NostocFacet
#| fig-cap: "Visualising a select of the Nostoc genuses. Note the different axis values."
#| warning: false

phytoCount %>%
  filter(Genus %in% c("Aphanizomenon","Nodularia","Dolichospermum","Pseudo-anabaena","Anabaena")) %>%
  group_by(Date, Genus) %>%
  summarise(Biomass_mgC_m3 = sum(Biomass_mgC_m3)) %>%
  ungroup() %>%
  inner_join(phytoCount %>% distinct(Date, Year), by = "Date") %>%
  mutate(year_day = case_when(Year == "2011" ~ julian(Date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(Date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(Date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(Date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(Date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(Date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(Date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(Date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(Date, origin = as.Date("2019-01-01"))
                              )) %>%
  filter(Year != "2020") %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = Biomass_mgC_m3, group = Genus, colour = Genus)) +
  geom_line() +
  theme_minimal() +
  ylab(bquote('Biomass '(mgCm^-3))) +
  theme(legend.position = "bottom",
        axis.text.y = element_text(size = 8, colour = "black"),
        axis.text.x = element_text(size = 8, colour = "black"),
        axis.title.x = element_text(size = 8, colour = "black", face = "bold"),
        axis.title.y = element_text(size = 8, colour = "black", face = "bold")
        ) +
  #scale_color_manual('Genus', values = GEOM_COL_COLOURS)  +
  #geom_vline(yintercept = 0, xintercept = as.Date("2015-01-01"), linetype = "dashed") +
  facet_wrap(~ Year, scales = "free_y") +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("Dates") 
  

ggsave("../results/CountNostocGenus.png", bg = "white")

```

## 16S data overview

Out of 1159 SILVA aphanizomenon sequences, all are annotated as dolichospermum in the SBDI annotation... For sure they are the same then. There are a total of 1401 Dolichospermum in the SBDI annotation, while no annotation of the genus Aphanizomenon is present in the SBDI. Thus the sequencees in Dolichospermum will be focused on to identify Aphanizomenon. Only one ASV belongs to the genus Anabaena, but this ASV has no counts, thus is not present in the LMO-data.

```{r}
aphas <- SILVA %>%
  filter(grepl("Aphanizomenon*",Genus)) %>%
  pull(ASV_ID)

#asv_tax_species %>%
  #filter(ASV_ID %in% aphas) 
```

Investigating if samples failed QC or have unusually low sequence numbers @fig-dada2_overview. Noticeable is A.Andersson project with low counts, this covers years 2011 and 13.

```{r}
#| label: fig-dada2_overview
#| fig-cap: "Counts in the various steps, hard to see clear patterns"
#| warning: false

tmp <- dada2 %>%
  filter(sample %in% unique(sample_ID$sample))

dada2 %>%
  filter(sample %in% unique(sample_ID$sample)) %>%
  mutate(sample = as_factor(sample) %>% fct_reorder(nonchim, .desc = TRUE)) %>%
  select(sample, DADA2_input, filtered, denoisedF, denoisedR, merged, nonchim) %>%
  pivot_longer(cols = c(DADA2_input, filtered, denoisedF, denoisedR, merged, nonchim), names_to = "step", values_to = "reads") %>%
  ggplot(mapping = aes(x = sample, y = reads)) +
  geom_point() +
  facet_wrap(~ step)
```

```{r}
#| label: fig-countSeqProject
#| fig-cap: "Clear that the Adderson project has very low counts, this is years 2011,2013. Dashed line is 10000 counts, for reference."
#| warning: false
#| fig-width: 25

#clean this up

dada2 %>%
  filter(sample %in% unique(sample_ID$sample)) %>%
  mutate(sample = as_factor(sample) %>% fct_reorder(nonchim, .desc = TRUE)) %>%
  select(sample, DADA2_input, filtered, denoisedF, denoisedR, merged, nonchim) %>%
  pivot_longer(cols = c(DADA2_input, filtered, denoisedF, denoisedR, merged, nonchim), names_to = "step", values_to = "reads") %>%
  inner_join(sample_ID %>% distinct(sample, seqproject) %>% mutate(sample = as_factor(sample)), by = "sample") %>%
  ggplot(mapping = aes(x = sample, y = reads)) +
  geom_point() +
  facet_grid(step ~ seqproject) +
  theme(panel.grid.major.y = element_line(size = 1),
        axis.text.y = element_text(size = 8, colour = "black"),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        strip.background = element_blank(),
        strip.text = element_text(size = 7, face = "plain", colour = "black")
        ) +
  geom_hline(yintercept=10000, linetype="dashed", colour = "green", size = 0.5) 
```

```{r}
#| label: fig-dada2
#| fig-cap: "DADA2-table"
#| warning: false
#| eval: false

kable(dada2) %>%
  kable_styling(bootstrap_options = c("striped", "hover"))
```

```{r}
#| label: something
#| warning: false
#| eval: false
asv_tables %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(date) %>%
  summarise(count = mean(count)) %>%
  ungroup()
```

### Nostocales relative community expression

Of total community, both the group Nostococeaea (filamentous cyanos) and Cyanobiaceae (picos(?)) were abundant in summer @fig-16SNostocaceaeRelab. Personally I think that subpanel b makes the abundance of Nostocaceae clear, while panel a makes it hard so see due to the patchiness of the figure.

```{r}
#| label: fig-16SNostocaceaeRelab
#| fig-cap: "Relative abundance of the most abundant families in the dataset."
#| fig-subcap: 
#|   - "Whole community included"
#|   - "Only Nostococeae"
#| warning: false

relab_table <- asv_tables %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(date,ASV_ID) %>%
  summarise(count = mean(count)) %>%
  ungroup() %>%
  group_by(date) %>%
  mutate(relab = count/sum(count)) %>%
  ungroup() 

#Making a top ten family vector
top11vec <- relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  group_by(Family) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  arrange(desc(relab)) %>%
  slice(1:11) %>%
  pull(Family)

relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>% 
  mutate(Family = ifelse(Family %in% top11vec, paste0(Family), paste0("Other"))) %>%
  group_by(Family, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
   mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  #filter(Family == "Nostocaceae") %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = relab, fill = Family)) +
  geom_area() +
  facet_wrap(~ Year) +
 scale_fill_manual('Family', values = GEOM_COL_COLOURS) +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("month")

relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>% 
  mutate(Family = ifelse(Family %in% top11vec, paste0(Family), paste0("Other"))) %>%
  group_by(Family, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
   mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  filter(Family == "Nostocaceae") %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = relab, fill = Family)) +
  geom_area() +
  facet_wrap(~ Year) +
 scale_fill_manual('Family', values = GEOM_COL_COLOURS) +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("month")
```

Plotting all Nostocales expression at the LMO. In SBDI they are considered a family "Nostocaceae". It becomes evident that only Nodularia and Dolichospermum are relatively abundant (@fig-Nostocaceae). And that Dolichospermum is the main contributor to Nostocaceae abundance.

```{r}
#| label: fig-Nostocaceae
#| fig-cap: "Relative abundance of all genuses in the nostocaceae family."
#| warning: false

relab_table <- asv_tables %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(date,ASV_ID) %>%
  summarise(count = mean(count)) %>%
  ungroup() %>%
  group_by(date) %>%
  mutate(relab = count/sum(count)) %>%
  ungroup() 

relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(Family == "Nostocaceae") %>%
  group_by(Genus, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
   mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = relab, group = Genus, colour = Genus)) +
  geom_line() +
  geom_point() +
  facet_wrap(~ Year) +
 scale_color_manual('Genus', values = GEOM_COL_COLOURS) +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("month")
```

### Overlaying the geom area with the line graph of the ASV's

Plotting the total Nostocaceae abundance it is clear to see that Dolichospermum is the main contributor to relative abundance @fig-NostocaceaeDolicho.

```{r}
#| label: fig-NostocaceaeDolicho
#| fig-cap: "Relative abundance of all genuses in the nostocaceae family. Grey area is the relative abundance of the Nostocaceae family"
#| warning: false
df1 <- relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>% 
  mutate(Family = ifelse(Family %in% top11vec, paste0(Family), paste0("Other"))) %>%
  group_by(Family, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
   mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  filter(Family == "Nostocaceae") 
  
 df2 <-  relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(Family == "Nostocaceae") %>%
  group_by(Genus, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
   mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           )
   
 ggplot(data = df2, mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = relab, fill = Genus, group = Genus, colour = Genus)) +
   geom_line() +
  #geom_line(data = df2, aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = relab, fill = Genus, group = Genus)) +
  geom_area(inherit.aes = FALSE, data = df1, aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = relab), alpha = 0.3) +
  geom_point() +
  facet_wrap(~ Year) +
 scale_color_manual('Genus', values = GEOM_COL_COLOURS) +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("month") +
  ylab("relative abundance")
 
 ggsave("../results/16S_NostocAndGenus.png", bg = "white")
```

Proceeding with the Dolichos in the SBDI to look at dynamics.

```{r}
#| label: rarecurve
#| warning: false
#| eval: false
sample_mat <- asv_tables %>%
  semi_join(sample_ID, by = "sample") %>%
  select(-project) %>%
  pivot_wider(values_from = count, names_from = sample, values_fill = 0 ) %>%
  column_to_rownames("ASV_ID") %>%
  as.matrix()

rarecurve(t(sample_mat), step = 100)
```

# Plotting of the Dolichospermum ASV's

There is a total of 354 Dolichospermum ASV's partitioned among 9 different species, while some were determined only to genus level @fig-Nostoc_species. All years except 2015 were dominated by the D. Flosaquae, in 2015 a sequence only determined as Dolichospermum were highly expressed together with flosaquae and Dolichospermum sp00312705. Flosaquae peak abundance was usually achieved around July, ranging from \~ 20% to \> 40% of total ASV abundance. Some years the peak abundance is before July, others during or slighty after.

2016 and 2017 relative abundances reach roughly 5 and 3 % in winter months. This matches peaks seen in transcriptomic MAG-data.

```{r}
#| label: fig-Nostoc_species
#| fig-cap: species level dynamics of the genus Dolichospermum sp., all ASV's within a species were summarised to achieve these dynamics.
#| warning: false

relab_table <- asv_tables %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(date,ASV_ID) %>%
  summarise(count = mean(count)) %>%
  ungroup() %>%
  group_by(date) %>%
  mutate(relab = count/sum(count)) %>%
  ungroup() 

relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(Genus == "Dolichospermum") %>%
  group_by(Species, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
  ggplot(mapping = aes(x = date, y = relab, group = Species, colour = Species)) +
  geom_line() +
  geom_point() +
  facet_wrap(~ Year, scales = "free_x") +
  scale_color_manual('Taxa', values = GEOM_COL_COLOURS) +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        )
```

```{r}
#| label: AnabaenaCheck
#| warning: false
#| eval: false
# Quick look at the anabaena ASV

relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(ASV_name == "ASV_38422") # The Anabaena is not present in the output count table, perhaps it's found in other sequencing projects.
```

```{r}
#| label: Nostoc_species2
#| warning: false
#| eval: false

#Plotting all Flosaquae in one plot with different colours per year instead
relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(Species == "Dolichospermum flosaquae") %>%
  group_by(Species, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
  mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  ggplot(mapping = aes(x = year_day, y = relab, group = Species, colour = Year)) +
  geom_line() +
  geom_point() +
  scale_color_manual('Year', values = GEOM_COL_COLOURS) +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  facet_wrap(~ Year)
```

The important ASV's responsible for the species level dynamics in @fig-Nostoc_species were next identified by plotting all ASV's within the Dolichospermum flosaquae species. Among the flosaquae ASV's, it is largely one ASV (ASV131100) which is responsible for the dynamics @fig-Aph_species.

(Sidenote: So far still doubtful about 2011 and 2013 due to low read count inputs,but doesn't really interfere with dynamics so should be OK to keep them). For ASV identity, perhaps extract sequence and place in tree to try and resolve taxonomic identity. Dreher et al. 2021 says that 16s is fairly congruent, as well as pigment genes (CpcAB) in the ADA-4clade)

```{r}
#| label: fig-Aph_species
#| fig-cap: ASV-dynamics of all ASV's within the Dolichospermum flosaquae species.
#| warning: false


#Select ten most abundant ASV's based on mean relative abundance.

top10 <- relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(Species == "Dolichospermum flosaquae") %>%
  group_by(ASV_ID) %>%
  summarise(relab = mean(relab)) %>%
  ungroup() %>%
  arrange(desc(relab)) %>%
  slice(1:10) %>%
  inner_join(asv_tax_species %>% distinct(ASV_ID, ASV_name), by = "ASV_ID") %>%
  pull(ASV_name)
  

relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(Species == "Dolichospermum flosaquae") %>%
  mutate(topASV = ifelse(ASV_name %in% top10, paste0(ASV_name), paste0("Other"))) %>%
  group_by(topASV, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
           ggplot(mapping = aes(x = date, y = relab, group = topASV, colour = topASV)) +
  geom_line() +
  geom_point() +
  scale_color_manual('Year', values = GEOM_COL_COLOURS) +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  facet_wrap(~ Year, scales = "free_x") +
  xlab("Date") +
  ylab("Relative Abundance") +
  scale_x_date(date_breaks = "2 months", date_labels = "%b")
```

The dominant ASV_131100 reaches peak-abundance in summer, from the period of Mid-June to end of July, with abundances ranging from \~9% up to \> 40%. In December 2012 the ASV reaches peak abundance of \> 30% in December. For the smoothing function, keepin mind that the uprise in December is caused by 2012.\
Keep in mind that rRNA copies of the filamentous cyanos are several (Mentioned in abstract of Dreher et al. 2021).

```{r}
#| layout-ncol: 2
#| label: fig-Dominant_ASV_dynamics
#| fig-cap: The relative abundance of the dominant ASV and it's temporal dynamics throughout the time-series.
#| fig-subcap: 
#|   - "All years included, triangles denote date of max expression for each year."
#|   - "Removed low count years 2011/2013, triangles denote date of max expression for each year."
#|   - "Smoothing function for all years."
#|   - "Smoothing function excluding years 2011 and 2013."
#| warning: false


relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(ASV_name == "ASV_131100") %>%
  group_by(ASV_name, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
  mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  group_by(Year) %>%
  mutate(maxVal = ifelse(relab == max(relab), "max","not_max")) %>%
  ungroup() %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2012-01-01")), y = relab, group = Year, colour = Year, shape = maxVal)) +
  geom_line() +
  geom_point() +
  scale_color_manual('Year', values = YEAR_COLOURS) +
  scale_shape_manual('', values = c(17,16), guide = "none") +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  xlab("Date") +
  ylab("Relative Abundance") +
  scale_x_date(date_breaks = "2 months", date_labels = "%b")


#The same figure again, but excluding 2011 and 2013
relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(ASV_name == "ASV_131100") %>%
  group_by(ASV_name, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
  mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  filter(!Year %in% c("2011","2013")) %>%
  group_by(Year) %>%
  mutate(maxVal = ifelse(relab == max(relab), "max","not_max")) %>%
  ungroup() %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2012-01-01")), y = relab, group = Year, colour = Year, shape = maxVal)) +
  geom_line() +
  geom_point() +
  scale_color_manual('Year', values = YEAR_COLOURS, drop = TRUE) +
  scale_shape_manual('', values = c(17,16), guide = "none") +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  xlab("Date") +
  ylab("Relative Abundance") +
  scale_x_date(date_breaks = "2 months", date_labels = "%b")

#Smoothing function all years

relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(ASV_name == "ASV_131100") %>%
  group_by(ASV_name, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
  mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2012-01-01")), y = relab, group = ASV_name)) +
  geom_smooth() +
  scale_color_manual('Year', values = GEOM_COL_COLOURS) +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  xlab("Date") +
  ylab("Relative Abundance") +
  scale_x_date(date_breaks = "2 months", date_labels = "%b")


#A smoothing function (one line and confidence interval)

relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(ASV_name == "ASV_131100") %>%
  group_by(ASV_name, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
  mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  filter(!Year %in% c("2011","2013")) %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = relab, group = ASV_name)) +
  geom_smooth() +
  scale_color_manual('Year', values = GEOM_COL_COLOURS) +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  xlab("Date") +
  ylab("Relative Abundance") +
  scale_x_date(date_breaks = "2 months", date_labels = "%b")
```

# Placement of 16S sequence in tree with known ADA-4 clade 16S sequences

Blasting the 16S sequence against the Aphanizomenon MAG yields no hits, (at a 90% similarity treshold). A quick blast of the sequence gives 100% identity fo Aphanizomenon flos-aquae in ncbi. Another way to verify this, I think SBDI taxonomy is based on 16S sequences from reference genomes only, if so a blast against this database and the identity of these genomes placed in the Dreher tree could answer this question well...

Following figure 3 and table S2 in [Dreher et al. 2021](https://pubmed.ncbi.nlm.nih.gov/33980445/) (Our MAG does not have a 16S rRNA seq), known genomes in the ADA-4 clade (and their accessions) are:

Aphanizomenon flos-aquae DEX188 [CP051188](https://www.ncbi.nlm.nih.gov/nuccore/CP051188.1/)

Aphanizomenon flos-aquae CP01 [JABGCF000000000](https://www.ncbi.nlm.nih.gov/nuccore/JABGCF000000000.1/)

Aphanizomenon flos-aquae UKL13_PBmSP [LTEC02000000](https://www.ncbi.nlm.nih.gov/nuccore/LTEC00000000.2/)\
The other reference genomes are not in table S2.

Performing the blastn using query sequence of ASV_131100: TGGGGAATTTTCCGCAATGGGCGAAAGCCTGACGGAGCAATACCGCGTGAGGGAGGAAGGCTCTTGGGTTGTAAACCTCTTTTCTCAGGGAAGAACAGAATGACGGTACCTGAGGAATAAGCATCGGCTAACTCCGTGCCAGCAGCCGCGGTAATACGGAGGATGCAAGCGTTATCCGGAATGATTGGGCGTAAAGGGTCCGCAGGTGGCATTGTAAGTCTGCTGTTAAAGAGTTTGGCTCAACCAAATAAGAGCAGTGGAAACTACAAAGCTAGAGTGTGGTCGGGGCAGAGGGAATTCCTGGTGTAGCGGTGAAATGCGTAGATATCAGGAAGAACACCAGTGGCGAAGGCGCTCTGCTAGGCCGAGACTGACACTGAGGGACGAAAGCTAGGGGAGCGAATG

Aphanizomenon flos-aquae DEX188 - 1 hit with 100% query coverage and 100% identity Aphanizomenon flos-aquae CP01 - no hits found even though it is reported to have 2 16S sequences.\
Aphanizomenon flos-aquae UKL13_PBmSP - 3 hits with 100% query coverage, and 100, 99.51 and 99.01% identity respectively.

That seems to check out for two of the genomes, question then remains, is it distinguishable from other 16S sequences? Unfortunately it is hard to take it further after this. This also suggest that the two 16S sequences in CP01 are very different from the other members ADA-4 members.

Sequences from Dolichospermum also end up in the ADA-4 clade, look at some of these to see coverage, should also have high similarity, then take some from for example ADA-3, which should be lower similarity then.

From the ADA-3 clade an aphanizomenon sequence:\
Aphanizomenon sp. UHCC 0183 - [VILC01000000](https://www.ncbi.nlm.nih.gov/nuccore/VILC00000000.1) - one hit with 100% coverage and 99.01% identity.\
Dolichospermum flos-aquae UHCC 0037 - [VILF01000000](https://www.ncbi.nlm.nih.gov/nuccore/VILF00000000.1) - one hit 100% coverage and 99.21% identity.

Very briefly, this looks like a lower percent than that of the ADA-4 clade, pointing to ADA-4 as the designated group. If necessary to make this even more robust, a tree can be made of the reference sequences.

```{r}
#| label: ASV_16s_seq
#| warning: false
#| include: false
#| eval: false
#TGGGGAATTTTCCGCAATGGGCGAAAGCCTGACGGAGCAATACCGCGTGAGGGAGGAAGGCTCTTGGGTTGTAAACCTCTTTTCTCAGGGAAGAACAGAATGACGGTACCTGAGGAATAAGCATCGGCTAACTCCGTGCCAGCAGCCGCGGTAATACGGAGGATGCAAGCGTTATCCGGAATGATTGGGCGTAAAGGGTCCGCAGGTGGCATTGTAAGTCTGCTGTTAAAGAGTTTGGCTCAACCAAATAAGAGCAGTGGAAACTACAAAGCTAGAGTGTGGTCGGGGCAGAGGGAATTCCTGGTGTAGCGGTGAAATGCGTAGATATCAGGAAGAACACCAGTGGCGAAGGCGCTCTGCTAGGCCGAGACTGACACTGAGGGACGAAAGCTAGGGGAGCGAATG - This is the sequence of ASV_131100. 
```

```{r}
#| label: ASV_16s_seq2
#| warning: false
#| include: false
#| eval: false
## Picking out all relevant sequences of ASV's to send to José
#These are 
"ASV_165504" - "TGGGGAATTTTCCGCAATGGGCGAAAGCCTGACGGAGCAATACCGCGTGAGGGAGGAAGGCTCTTGGGTTGTAAACCTCTTTTCTCAGGGAAGAAAAAAATGACGGTACCTGAGGAATAAGCATCGGCTAACTCCGTGCCAGCAGCCGCGGTAATACGGAGGATGCAAGCGTTATCCGGAATGATTGGGCGTAAAGGGTCCGCAGGTGGCATTGTTTGTCTGCTGTTAAAGAGTCTGGCTCAACCAGATCAAAGCAGTGGAAACTACAAAGCTAGAGTATGGTCGGGGCAGAGGGAATTCCTGGTGTAGCGGTGAAATGCGTAGATATCAGGAAGAACACCGGTGGCGAAGGCGCTCTGCTAGGCCAAAACTGACACTGAGGGACGAAAGCTAGGGGAGCGAATG"
"ASV_27219" - "TGGGGAATTTTCCGCAATGGGCGAAAGCCTGACGGAGCAATACCGCGTGAGGGAGGAAGGCTCTTGGGTTGTAAACCTCTTTTCTCAGGGAAGAAAAAAATGACGGTACCTGAGGAATAAGCATCGGCTAACTCCGTGCCAGCAGCCGCGGTAATACGGAGGATGCAAGCGTTATCCGGAATGATTGGGCGTAAAGGGTCCGCAGGTGGCATTGTTTGTCTGCTGTTAAAGAGTCTGGCTCAACCAGATAAAAGCAGTGGAAACTACAAAGCTAGAGTATGGTCGGGGCAGAGGGAATTCCTGGTGTAGCGGTGAAATGCGTAGATATCAGGAAGAACACCGGTGGCGAAGGCGCTCTGCTAGGCCAAAACTGACACTGAGGGACGAAAGCTAGGGGAGCGAATG"
"ASV_131100" - "TGGGGAATTTTCCGCAATGGGCGAAAGCCTGACGGAGCAATACCGCGTGAGGGAGGAAGGCTCTTGGGTTGTAAACCTCTTTTCTCAGGGAAGAACAGAATGACGGTACCTGAGGAATAAGCATCGGCTAACTCCGTGCCAGCAGCCGCGGTAATACGGAGGATGCAAGCGTTATCCGGAATGATTGGGCGTAAAGGGTCCGCAGGTGGCATTGTAAGTCTGCTGTTAAAGAGTTTGGCTCAACCAAATAAGAGCAGTGGAAACTACAAAGCTAGAGTGTGGTCGGGGCAGAGGGAATTCCTGGTGTAGCGGTGAAATGCGTAGATATCAGGAAGAACACCAGTGGCGAAGGCGCTCTGCTAGGCCGAGACTGACACTGAGGGACGAAAGCTAGGGGAGCGAATG"
"ASV_177401" - "TGGGGAATTTTCCGCAATGGGCGAAAGCCTGACGGAGCAATACCGCGTGAGGGAGGAAGGCTCTTGGGTTGTAAACCTCTTTTCTCAGGGAAGAAAAAAATGACGGTACCTGAGGAATAAGCATCGGCTAACTCCGTGCCAGCAGCCGCGGTAATACGGAGGATGCAAGCGTTATCCGGAATGATTGGGCGTAAAGGGTCCGCAGGTGGCATTGTAAGTCTGCTGTTAAAGAGTTTGGCTCAACCAAATAAGAGCATTGGAAACTACAAAGCTAGAGTATGGTCGGGGCAGAGGGAATTCCTGGTGTAGCGGTGAAATGCGTAGATATCAGGAAGAACACCGGTGGCGAAGGCGCTCTGCTAGGCCAAAACTGACACTGAGGGACGAAAGCTAGGGGAGCGAATG"
"ASV_101064" - "TGGGGAATTTTCCGCAATGGGCGAAAGCCTGACGGAGCAATACCGCGTGAGGGAGGAAGGCTCTTGGGTTGTAAACCTCTTTTCTCAGGGAAGAAAAAAATGACGGTACCTGAGGAATAAGCATCGGCTAACTCCGTGCCAGCAGCCGCGGTAATACGGAGGATGCAAGCGTTATCCGGAATGATTGGGCGTAAAGGGTCCGCAGGTGGCATTGTAAGTCTGCTGTTAAAGAGTTTGGCTCAACCAAATAAGAGCAGTGGAAACTACAAAGCTAGAGTATGGTCGGGGCAGAGGGAATTCCTGGTGTAGCGGTGAAATGCGTAGATATCAGGAAGAACACCGGTGGCGAAGGCGCTCTGCTAGGCCAAAACTGACACTGAGGGACGAAAGCTAGGGGAGCGAATG"
```

## 16S placement according to dreher et al. 2021

Placing the ssequence into the 16S reference tree of Dreher et al. the 16s sequence places in the ADA-4 group @fig-ASV_16s_placement.

```{r}
#| label: fig-ASV_16s_placement
#| fig-cap: "Placement of 16S among reference sequences, highly abundant ASV is right below yellow-marked refseq."
#| warning: false
knitr::include_graphics("../results/placement.graft.placement.epa_result_Daniel.png")
```

# Compare counts and relative abundance to see if they line up well (maybe even a correlation).

Comparing the phytoplankton counts with 16S abundances it appear that Aphanizomenon counts are somewhat followed by the Dolichospermum 16S-abundances (@fig-16SAndPhytoCounts) (16S can't separate Aphanizomenon and SBDI names all Aphanizomenon in NCBI to Dolicho.) Suggesting that the 16S is capturing what we are seeing in the counts as well. Nodularia on the other hand is poorly represented in the 16S abundance.

```{r}
#| label: fig-16SAndPhytoCounts
#| fig-cap: "Phytplankton absolute- and 16S relative- abundances of selected Nostoc genuses. Note that the year 202 0 has been left out of the count data for readability"
#| fig-subcap: 
#|   - "Phytocounts with fixed y-axis"
#|   - "Phytocounts with free y-axis"
#|   - "16S relative abundance"
#| warning: false
#| layout-ncol: 1

#Plotting abundance of Phytocounts, fixed y-axis
phytoCount %>%
  filter(Year != "2020") %>%
  filter(Genus %in% c("Aphanizomenon","Nodularia","Dolichospermum","Pseudo-anabaena","Anabaena")) %>%
  group_by(Date, Genus) %>%
  summarise(Biomass_mgC_m3 = sum(Biomass_mgC_m3)) %>%
  ungroup() %>%
  inner_join(phytoCount %>% distinct(Date, Year), by = "Date") %>%
   mutate(year_day = case_when(Year == "2011" ~ julian(Date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(Date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(Date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(Date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(Date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(Date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(Date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(Date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(Date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = Biomass_mgC_m3, group = Genus, colour = Genus)) +
  geom_line() +
  geom_point() +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  scale_color_manual('Genus', values = GENUS_COLOURS1)  +
  #geom_vline(yintercept = 0, xintercept = as.Date("2015-01-01"), linetype = "dashed") +
  facet_wrap(~ Year) +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("month")

#Plotting abundance of Phytocounts without fixed y-axis
phytoCount %>%
  filter(Year != "2020") %>%
  filter(Genus %in% c("Aphanizomenon","Nodularia","Dolichospermum","Pseudo-anabaena","Anabaena")) %>%
  group_by(Date, Genus) %>%
  summarise(Biomass_mgC_m3 = sum(Biomass_mgC_m3)) %>%
  ungroup() %>%
  inner_join(phytoCount %>% distinct(Date, Year), by = "Date") %>%
   mutate(year_day = case_when(Year == "2011" ~ julian(Date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(Date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(Date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(Date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(Date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(Date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(Date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(Date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(Date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = Biomass_mgC_m3, group = Genus, colour = Genus)) +
  geom_line() +
  geom_point() +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  scale_color_manual('Genus', values = GENUS_COLOURS1)  +
  #geom_vline(yintercept = 0, xintercept = as.Date("2015-01-01"), linetype = "dashed") +
  facet_wrap(~ Year, scales = "free_y") +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("month")



#Plotting 16S relative abundances


#Aphanizomenon is absent in the 16S so no need. Then subset Nodularia
relab_table <- asv_tables %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(date,ASV_ID) %>%
  summarise(count = mean(count)) %>%
  ungroup() %>%
  group_by(date) %>%
  mutate(relab = count/sum(count)) %>%
  ungroup() 

relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(Genus %in% c("Dolichospermum", "Nodularia","Anabaena","Pseudanabaena")) %>%
  group_by(Genus, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
   mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = relab, group = Genus, colour = Genus)) +
  geom_line() +
  geom_point() +
  facet_wrap(~ Year) +
  scale_color_manual('Genus', values = GENUS_COLOURS2) +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("month")
```

It becomes clear to see that some patterns look different, this is partly due to the lumping of anabaena into Dolichospermum in the 16S data, so here they need to ber separated into the different ASV's and picked out individually to match the dynamics. As seen in @fig-Nostoc_species the species mainly responsible are an unnanottated Dolicho, flosaquae and Dolichospermum sp000312705, so these are then plotted into their specifc ASVs.

For Dolichospermum sp000312705 there is mainly two ASV's responsible for relative abundance and mainly restricted to year 2015: ASV_165504 and ASV_27219 @fig-DolichoQuestioning.

As we know already in the flosaquae it is mainly ASV_131100 that is responsible for dynamics.

The unannotated ones on the other hand also shows some interesting dynamics, explaining mainly the year 2015: the asvs here are ASV_177401, ASV_101064.

```{r}
#| label: fig-DolichoQuestioning
#| fig-cap: "Phytplankton absolute- and 16S relative- abundances of selected Nostoc genuses. Note that the year 202 0 has been left out of the count data for readability"
#| fig-subcap: 
#|   - "Phytocounts with fixed y-axis"
#|   - "16S relative abundance"
#| warning: false
#| layout-ncol: 1

#Subset to: 
# Dolichospermum flosaquae, Dolichospermum sp000312705

plot <- relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  group_by(ASV_ID, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
   mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  inner_join(asv_tax_species %>% distinct(ASV_ID, ASV_name, Species), by = "ASV_ID") %>%
  filter(Species %in% c("Dolichospermum sp000312705")) %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = relab, group = ASV_name, colour = ASV_name)) +
  geom_line() +
  geom_point() +
  facet_wrap(~ Year) +
  #scale_color_manual('Genus', values = GENUS_COLOURS2) +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("month")

ggplotly(plot)


#Plotting just hte dolicho

 plot <- relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  group_by(ASV_ID, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
   mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  inner_join(asv_tax_species %>% distinct(ASV_ID, ASV_name, Species,Genus), by = "ASV_ID") %>%
   filter(Genus == "Dolichospermum") %>%
  filter(Species %in% c("")) %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = relab, group = ASV_name, colour = ASV_name)) +
  geom_line() +
  geom_point() +
  facet_wrap(~ Year) +
  #scale_color_manual('Genus', values = GENUS_COLOURS2) +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black")
        ) +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("month")

ggplotly(plot)

```

Plotting the relevant ASV's together @fig-relevant_ASVs. Looking at this together with the phytocounts, it would appear that the patterns are better explained by the collective genus expression of several ASV's, as seen in @fig-16SAndPhytoCounts. THIS should be confirmed with correlation.\
While the large-scale patterns of peaks in summer are congruent, the peaks doesn't line up that well with the counts on a date-to-date basis. This could be due to the nature of the relative data, i.e if other ASV's are highly abundant, they may press down the relative abundance of for example Aphanizomenon, thus hampering the relationship between asbolute and relative abundance. For example the biomass in february 2017 is increasing, while the trend is decreasing in the 16s, in contrast there is also an increase in the gene expression during this date. Still both 16S and count data show a rather wide abundance window for Aphanizomenon.

```{r}
#| label: fig-relevant_ASVs
#| fig-cap: "16S relative- abundances of the major ASV's in the Dolichospermum genus, followed by phytocounts of Aphanizomenon"
#| warning: false
#| fig-subcap: 
#|   - "Aphanizomenon phytocounts"
#|   - "16S"
#|   - "Apha counts free-yaxis"
#| layout-ncol: 1
# Relevant ASVs 
ASVVec <- c("ASV_165504", "ASV_27219","ASV_131100","ASV_177401","ASV_101064")



#Phytocounts apha only
phytoCount %>%
  filter(Year != "2020") %>%
  filter(Genus %in% c("Aphanizomenon")) %>%
  group_by(Date, Genus) %>%
  summarise(Biomass_mgC_m3 = sum(Biomass_mgC_m3)) %>%
  ungroup() %>%
  inner_join(phytoCount %>% distinct(Date, Year), by = "Date") %>%
   mutate(year_day = case_when(Year == "2011" ~ julian(Date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(Date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(Date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(Date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(Date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(Date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(Date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(Date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(Date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = Biomass_mgC_m3, group = Genus, colour = Genus)) +
  geom_line() +
  geom_point() +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.position = "bottom"
        ) +
  scale_color_manual('Genus', values = GENUS_COLOURS1[1])  +
  #geom_vline(yintercept = 0, xintercept = as.Date("2015-01-01"), linetype = "dashed") +
  facet_wrap(~ Year) +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("month")

relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(ASV_name %in% ASVVec) %>%
  group_by(ASV_ID, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(Year = str_extract(date, "[0-9][0-9][0-9][0-9]")) %>%
   mutate(year_day = case_when(Year == "2011" ~ julian(date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  inner_join(asv_tax_species %>% distinct(ASV_ID, ASV_name, Species), by = "ASV_ID") %>%
  mutate(ASV_name = paste0(ASV_name, Species)) %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = relab, group = ASV_name, colour = ASV_name)) +
  geom_line() +
  geom_point() +
  facet_wrap(~ Year) +
  #scale_color_manual('Genus', values = GENUS_COLOURS2) +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.position = "bottom"
        ) +
  guides(colour=guide_legend(ncol=2)) +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("month")

phytoCount %>%
  filter(Year != "2020") %>%
  filter(Genus %in% c("Aphanizomenon")) %>%
  group_by(Date, Genus) %>%
  summarise(Biomass_mgC_m3 = sum(Biomass_mgC_m3)) %>%
  ungroup() %>%
  inner_join(phytoCount %>% distinct(Date, Year), by = "Date") %>%
   mutate(year_day = case_when(Year == "2011" ~ julian(Date, origin = as.Date("2011-01-01")),
                              Year == "2012" ~ julian(Date, origin = as.Date("2012-01-01")),
                              Year == "2013" ~ julian(Date, origin = as.Date("2013-01-01")),
                              Year == "2014" ~ julian(Date, origin = as.Date("2014-01-01")),
                              Year == "2015" ~ julian(Date, origin = as.Date("2015-01-01")),
                              Year == "2016" ~ julian(Date, origin = as.Date("2016-01-01")),
                              Year == "2017" ~ julian(Date, origin = as.Date("2017-01-01")),
                              Year == "2018" ~ julian(Date, origin = as.Date("2018-01-01")),
                              Year == "2019" ~ julian(Date, origin = as.Date("2019-01-01"))
                              )
           
           ) %>%
  ggplot(mapping = aes(x = as.Date(year_day, origin = as.Date("2011-01-01")), y = Biomass_mgC_m3, group = Genus, colour = Genus)) +
  geom_line() +
  geom_point() +
  theme_minimal() +
  theme(strip.background = element_blank(),
        strip.text = element_text(size = 8, colour = "black"),
        legend.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.text = element_text(size = 8, colour = "black"),
        axis.text = element_text(size = 8, colour = "black"),
        axis.title = element_text(size = 8, face = "bold", colour = "black"),
        legend.position = "bottom"
        ) +
  scale_color_manual('Genus', values = GENUS_COLOURS1[1])  +
  #geom_vline(yintercept = 0, xintercept = as.Date("2015-01-01"), linetype = "dashed") +
  facet_wrap(~ Year, scales = "free_y") +
  scale_x_date(date_breaks = "2 months", date_labels = "%b") +
  xlab("month")
```

## Correlation of 16S abundances with phytocounts

Not pretty, probably due to the bumpy values in 16S. Correlations are horrible @tbl-Correlation16SCounts.

```{r}
#| label: tbl-Correlation16SCounts
#| tbl-cap: "Spearman correlation between 16S features (ASV's and Species summaries) and Aphanizomenon biomass"
#| warning: false

corr_df <- relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(ASV_name %in% ASVVec) %>%
  group_by(ASV_ID, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  inner_join(asv_tax_species %>% distinct(ASV_ID, ASV_name)) %>%
  select(-ASV_ID) %>%
  pivot_wider(names_from = ASV_name, values_from = relab, values_fill = 0) %>%
  rename(Date = "date") %>%
  mutate(Date = as.Date(Date)) %>%
  inner_join( #Joining in the species-level relative abundance ´
    relab_table %>%
      inner_join(asv_tax_species, by = "ASV_ID") %>%
      filter(Genus == "Dolichospermum") %>%
      filter(Species %in% c("Dolichospermum sp000312705","Dolichospermum flosaquae")) %>%
      group_by(Species, date) %>%
      summarise(relab = sum(relab)) %>%
      ungroup() %>%
      pivot_wider(names_from = Species, values_from = relab, values_fill = 0) %>%
      rename(Date = "date") %>%
      mutate(Date = as.Date(Date)),
    by = "Date"
  ) %>%
  inner_join(phytoCount %>% # joining in the biomass
               filter(Year != "2020") %>%
               filter(Genus %in% c("Aphanizomenon")) %>% 
               group_by(Date, Genus) %>% 
               summarise(Biomass_mgC_m3 = sum(Biomass_mgC_m3)) %>% 
               ungroup() %>%
               select(-Genus),
             by = "Date"
  ) %>%
  column_to_rownames("Date") 

#Creating a dataframe to hold the output from the test

matr = matrix(nrow = length(colnames(corr_df))-1, ncol = 3)

for (i in 1:(length(colnames(corr_df))-1)) {
  test <- cor.test(corr_df[,i], corr_df[,ncol(corr_df)], method = "spearman")
  
  matr[i,1] = round(test$p.value, digits = 5)
  matr[i,2] = round(test$estimate, digits = 3)
  matr[i,3] = colnames(corr_df[i])
}

hmm <- matr %>%
  as.data.frame() %>%
  rename(pVal = "V1", rho = "V2", feature = "V3")

kableExtra::kable(hmm,table.attr = "style='width:120%;'")
```

Trying a normal correlation-plot instead of a paired correlation @fig-Correlation16SCounts. Due to the log-scale behaviour, a meaningful relationship does not occur until phytoplankton bioomass is higher than 1 (0 on logscale), already on the genus level it we see a relationship, this appears to hold all the way down to the ASV-level where ASV_131100 appears to be the main responsible ASV.

```{r}
#| label: fig-Correlation16SCounts
#| fig-cap: "relationship between counts and relative abundance"
#| fig-subcap: 
#|   - "Genus"
#|   - "Species"
#|   - "ASV's"
#| warning: false


#starting with genus
relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
      filter(Genus == "Dolichospermum") %>%
      group_by(Genus, date) %>%
      summarise(relab = sum(relab)) %>%
      ungroup() %>%
      rename(Date = "date") %>%
      mutate(Date = as.Date(Date)) %>%
  inner_join(phytoCount %>% # joining in the biomass
               filter(Year != "2020") %>%
               filter(Genus %in% c("Aphanizomenon")) %>% 
               group_by(Date, Genus) %>% 
               summarise(Biomass_mgC_m3 = sum(Biomass_mgC_m3)) %>% 
               ungroup() %>%
               select(-Genus),
             by = "Date"
  ) %>%
  select(-Genus) %>%
  ggplot(mapping = aes(x = log(Biomass_mgC_m3), y = log(relab))) +
  geom_point()+
  geom_smooth()

#Looking at the dominant species (i.e flosaquae and Dolichospermum sp000312705)
relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
      filter(Genus == "Dolichospermum") %>%
  filter(Species %in% c("Dolichospermum sp000312705","Dolichospermum flosaquae")) %>%
      group_by(Species, date) %>%
      summarise(relab = sum(relab)) %>%
      ungroup() %>%
      rename(Date = "date") %>%
      mutate(Date = as.Date(Date)) %>%
  inner_join(phytoCount %>% # joining in the biomass
               filter(Year != "2020") %>%
               filter(Genus %in% c("Aphanizomenon")) %>% 
               group_by(Date, Genus) %>% 
               summarise(Biomass_mgC_m3 = sum(Biomass_mgC_m3)) %>% 
               ungroup() %>%
               select(-Genus),
             by = "Date"
  ) %>%
  ggplot(mapping = aes(x = log(Biomass_mgC_m3), y = log(relab), colour = Species)) +
  geom_point()+
  geom_smooth()

#Plotting the most abundant ASV's in this one
relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(ASV_name %in% ASVVec) %>%
  group_by(ASV_ID, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  rename(Date = "date") %>%
  mutate(Date = as.Date(Date)) %>%
  inner_join(phytoCount %>% # joining in the biomass
               filter(Year != "2020") %>%
               filter(Genus %in% c("Aphanizomenon")) %>% 
               group_by(Date, Genus) %>% 
               summarise(Biomass_mgC_m3 = sum(Biomass_mgC_m3)) %>% 
               ungroup() %>%
               select(-Genus),
             by = "Date"
  ) %>%
  inner_join(asv_tax_species %>% distinct(ASV_ID, ASV_name), by = "ASV_ID") %>%
  ggplot(mapping = aes(x = log(Biomass_mgC_m3), y = log(relab), colour = ASV_name)) +
  geom_point()+
  geom_smooth()

```

## ANOVA test on different seasonal abundances

An abundance test of seasons revealed significant differences between summer-spring and summer-autumn, however no significat difference wqas observed between summer and winter @fig-ANOVA.

```{r}
#| label: fig-ANOVA
#| fig-cap: "boxplots with anova and tukeys test on the abundance of ASV_131100 and seasons."
#| fig-subcap: 
#|   - "Boxplots of relative abundances, vertical line in box denotes median value. "
#|   - "Tukey's pairwise test of significance."
#| warning: false

relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(ASV_name == "ASV_131100") %>%
  group_by(ASV_ID, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(date = as.Date(date)) %>%
  inner_join(LMODate %>% distinct(Date, season) %>% rename(date = "Date"), by = "date") %>%
  ggplot(mapping = aes(season, relab)) +
  geom_boxplot() +
  theme_minimal()

#Running an ANOVA to test this

relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(ASV_name == "ASV_131100") %>%
  group_by(ASV_ID, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(date = as.Date(date)) %>%
  inner_join(LMODate %>% distinct(Date, season) %>% rename(date = "Date"), by = "date") %>%
  select(season, relab) %>%
  aov(data =., relab ~ season) %>%
  summary()

#Posthoc test
model <- relab_table %>%
  inner_join(asv_tax_species, by = "ASV_ID") %>%
  filter(ASV_name == "ASV_131100") %>%
  group_by(ASV_ID, date) %>%
  summarise(relab = sum(relab)) %>%
  ungroup() %>%
  mutate(date = as.Date(date)) %>%
  inner_join(LMODate %>% distinct(Date, season) %>% rename(date = "Date"), by = "date") %>%
  select(season, relab) %>%
  aov(data =., relab ~ season)

TukeyHSD(model, conf.level = .95)
#According to tukey's test the abundance is significantly different between summer-autumn and summer-spring.

plot(TukeyHSD(model, conf.level = .95), las = 2)
```
